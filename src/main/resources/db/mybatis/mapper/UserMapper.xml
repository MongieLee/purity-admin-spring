<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.example.demo.User">
    <resultMap id="userMap" type="com.example.demo.model.persistent.User">
        <id column="id" property="id"></id>
        <!--        <result column="user_type" property="userType"-->
        <!--                typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"></result>-->
        <!--        <result column="user_type" property="userType"-->
        <!--                typeHandler="com.example.demo.model.UserEnumTypeHandler"></result>-->
    </resultMap>
    <select id="login" parameterType="User">
        select *
        from user
        where id = #{username}
          and encryptedPassword = #{encryptedPassword}
    </select>
    <!--    <insert id="register">-->
    <!--        insert into user-->
    <!--        (username, encrypted_password, nickname, avatar, status, user_type, created_at, updated_at)-->
    <!--        values (#{username}, #{encryptedPassword}, #{nickname}, #{avatar}, 1,-->
    <!--                #{userType,typeHandler=com.example.demo.model.UserEnumTypeHandler}, now(), now())-->
    <!--    </insert>-->
    <insert id="register">
        insert into user
        (username, encrypted_password, nickname, avatar, status, created_at, updated_at)
        values (#{username}, #{encryptedPassword}, #{nickname}, #{avatar}, 1, now(), now())
    </insert>
    <select id="getUserById" resultType="User">
        select *
        from user
        where id = #{userId}
    </select>
    <select id="getUserByUsername" resultMap="userMap">
        select *
        from user
        where username = #{username}
    </select>
    <select id="getPage" resultMap="userMap">
        select *
        from user
        <if test="username != null">
            where username like concat('%',#{username},'%')
        </if>
    </select>
    <update id="updateUser" parameterType="User">
        UPDATE user
        SET avatar     = #{avatar},
            updated_at = now(),
            nickname   = #{nickname}
        where id = #{id}
    </update>
    <update id="updatePassword" parameterType="user">
        UPDATE user
        set encrypted_password = #{encryptedPassword}
        where id = #{id}
    </update>
    <delete id="deleteUser">
        delete
        from user
        where id = #{id}
    </delete>
    <update id="changeStatus">
        update user
        set status = #{status}
        where id = #{userId};
    </update>
    <select id="findRolesByUserId">
        select role_id
        from user_role_rel
        where user_id = #{userId};
    </select>
</mapper>
